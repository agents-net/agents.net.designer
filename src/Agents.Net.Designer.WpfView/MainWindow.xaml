<Window x:Class="Agents.Net.Designer.WpfView.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:wpfGraphControl="http://mlsagl"

        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:Agents.Net.Designer.ViewModel;assembly=Agents.Net.Designer.ViewModel"
        xmlns:System="clr-namespace:System;assembly=System.Runtime"
        xmlns:wpfView="clr-namespace:Agents.Net.Designer.WpfView"
        xmlns:controls="clr-namespace:Metrolib.Controls;assembly=Metrolib"
        xmlns:extensions="clr-namespace:MaterialDesignExtensions.Controls;assembly=MaterialDesignExtensions"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
          Title="MainWindow" Height="1000" Width="1200">
    <materialDesign:DialogHost Identifier="Root">
        <DockPanel>
            <Grid DockPanel.Dock="Top" Margin="0,10,10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Menu IsMainMenu="True" HorizontalAlignment="Left">
                    <MenuItem
                        Header="_File">
                        <MenuItem
                            Header="Connect to File"
                            Click="ConnectFileOnClick"
                            InputGestureText="Crtl+O">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon
                                    Kind="Database" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Header="Export image"
                            Click="ExportImageOnClick"
                            InputGestureText="Crtl+E">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon
                                    Kind="Image" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem
                            Header="Generate classes"
                            Click="GenerateClassesOnClick"
                            InputGestureText="Crtl+G">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon
                                    Kind="Code" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem
                        Header="_Edit">
                        <MenuItem
                            Header="Add Agent"
                            Click="AddAgentOnClick"
                            InputGestureText="Crtl+Alt+A">
                        </MenuItem>
                        <MenuItem
                            Header="Add Interceptor Agent"
                            Click="AddInterceptorAgentOnClick"
                            InputGestureText="Crtl+Alt+I">
                        </MenuItem>
                        <MenuItem
                            Header="Add Message"
                            Click="AddMessageOnClick"
                            InputGestureText="Crtl+Alt+M">
                        </MenuItem>
                        <MenuItem
                            Header="Add Message Decorator"
                            Click="AddMessageDecoratorOnClick"
                            InputGestureText="Crtl+Alt+D">
                        </MenuItem>
                    </MenuItem>
                </Menu>
                <extensions:PersistentSearch x:Name="SearchBox"
                                             d:DataContext="{d:DesignInstance viewModel:SearchViewModel, IsDesignTimeCreatable=True}"
                                             SearchCommand="{Binding SearchCommand}"
                                             SearchTerm="{Binding SearchTerm, Mode=TwoWay}"
                                             SearchSuggestionsSource="{Binding}"
                                             SearchHint="Jump To..."
                                             HorizontalAlignment="Stretch"
                                             Width="400"
                                             Grid.Column="1"
                                             Style="{StaticResource MaterialDesignPersistentSearchDense}"/>  
            </Grid>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="2" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="2"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <materialDesign:Card Padding="32" Margin="16,16,10,10" Grid.Column="0" Grid.Row="0">
                    <materialDesign:Card.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type viewModel:CommunityViewModel}"
                                                  ItemsSource="{Binding Items}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="DesktopWindows" VerticalAlignment="Center"/>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="{Binding Name}" Margin="8,0,0,0" 
                                           VerticalAlignment="Center"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                        
                        <HierarchicalDataTemplate DataType="{x:Type viewModel:FolderViewModel}"
                                                  ItemsSource="{Binding Items}">
                            <StackPanel Orientation="Horizontal">
                                <materialDesign:PackIcon Kind="Folder" VerticalAlignment="Center"/>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="{Binding Name}" Margin="8,0,0,0" VerticalAlignment="Center"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                        
                        <HierarchicalDataTemplate DataType="{x:Type viewModel:AgentViewModel}"
                                                  ItemsSource="{Binding Items}">
                            <StackPanel Orientation="Horizontal" ToolTip="{Binding FullName}">
                                <materialDesign:PackIcon Kind="FaceAgent" VerticalAlignment="Center"
                                                         x:Name="Icon"/>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="{Binding Name}" Margin="8,0,0,0" VerticalAlignment="Center"/>
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding AgentType}" Value="Interceptor">
                                    <Setter TargetName="Icon" Property="Kind" Value="LightningBolt"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>
                        
                        <HierarchicalDataTemplate DataType="{x:Type viewModel:MessageViewModel}"
                                                  ItemsSource="{Binding Items}">
                            <StackPanel Orientation="Horizontal" ToolTip="{Binding FullName}">
                                <materialDesign:PackIcon Kind="Message" VerticalAlignment="Center" x:Name="Icon"/>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="{Binding Name}" Margin="8,0,0,0" VerticalAlignment="Center"/>
                            </StackPanel>
                            <HierarchicalDataTemplate.Triggers>
                                <DataTrigger Binding="{Binding MessageType}" Value="MessageDecorator">
                                    <Setter TargetName="Icon" Property="Kind" Value="CircleDouble"/>
                                </DataTrigger>
                            </HierarchicalDataTemplate.Triggers>
                        </HierarchicalDataTemplate>
                    </materialDesign:Card.Resources>
                    <controls:FlatTreeView ItemsSource="{Binding Items}"
                                           d:DataContext="{d:DesignInstance viewModel:TreeViewModel, IsDesignTimeCreatable=True}"
                                           x:Name="TreeView"
                                           wpfView:AttachedBehaviors.IsBringSelectedIntoView="True"
                                           SelectedItemChanged="TreeViewOnSelectedItemChanged" />
                </materialDesign:Card>
                <GridSplitter Grid.Column="0" Grid.Row="1" ResizeDirection="Rows"
                              ResizeBehavior="PreviousAndNext"
                              HorizontalAlignment="Stretch"
                              Height="2"
                              Width="Auto"/>
                <materialDesign:Card Padding="32" Margin="16,10,10,16" Grid.Column="0" Grid.Row="2">
                    <ScrollViewer x:Name="DetailsView"
                                    d:DataContext="{d:DesignInstance viewModel:DetailsViewModel, IsDesignTimeCreatable=True}"
                                    Content="{Binding CurrentItem}"
                                    VerticalScrollBarVisibility="Auto"
                                    HorizontalScrollBarVisibility="Disabled">
                        <ScrollViewer.Resources>

                            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignIconForegroundButton}" x:Key="DeleteItemButton">
                                <Setter Property="Width" Value="30"/>
                                <Setter Property="Height" Value="30"/>
                                <Setter Property="ToolTip" Value="Delete"/>
                                <Setter Property="Command" Value="{Binding Path=DataContext.DeleteItemCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Converter={wpfView:ButtonToDeleteItemEventArgsConverter}}"/>
                            </Style>
                            
                            <Style TargetType="ListBox" BasedOn="{StaticResource MaterialDesignListBox}" x:Key="MessageListBox">
                                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                            
                            <Style TargetType="ListBox" BasedOn="{StaticResource MaterialDesignListBox}" x:Key="EventsListBox">
                                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="ItemTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis"
                                                           ToolTip="{Binding}" Grid.Column="0"
                                                           VerticalAlignment="Center"/>
                                    
                                                <Button Style="{StaticResource DeleteItemButton}" Grid.Column="1">
                                                    <materialDesign:PackIcon Kind="Delete"/>
                                                </Button>
                                            </Grid>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            
                            <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}" x:Key="EditableMessageComboBox">
                                <Setter Property="IsEditable" Value="True"/>
                                <Setter Property="IsTextSearchEnabled" Value="True"/>
                                <Setter Property="IsTextSearchCaseSensitive" Value="True"/>
                                <Setter Property="TextSearch.TextPath" Value="Name"/>
                                <Setter Property="wpfView:AttachedBehaviors.UpdatePropertySourceWhenEnterPressed" Value="ComboBox.Text"/>
                                <Setter Property="wpfView:AttachedBehaviors.UpdateTextOnDropDownClosed" Value="True"/>
                                <Setter Property="ItemTemplate">
                                    <Setter.Value>
                                        <DataTemplate DataType="{x:Type viewModel:MessageViewModel}">
                                            <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                                       Text="{Binding Name}" ToolTip="{Binding FullName}"
                                                       TextTrimming="CharacterEllipsis" Grid.Column="0"
                                                       VerticalAlignment="Center"/>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            
                            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}" x:Key="UpdateOnEnterBox">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="wpfView:AttachedBehaviors.UpdatePropertySourceWhenEnterPressed" Value="TextBox.Text"/>
                            </Style>

                            <DataTemplate DataType="{x:Type viewModel:CommunityViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="Default Namespace" Margin="0,4,8,4" VerticalAlignment="Center"
                                               Grid.Column="0" Grid.Row="0"/>
                                    <TextBox Style="{DynamicResource UpdateOnEnterBox}"
                                             Text="{Binding Name, Mode=TwoWay}"
                                             ToolTip="{Binding Name}"
                                             Grid.Column="1" Grid.Row="0"/>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="Generate Autofac Module" Margin="0,4,8,4" VerticalAlignment="Center"
                                               ToolTip="If enabled, the code generator will generate a Module class for the Autofac DI framework where all agents are registered."
                                               Grid.Column="0" Grid.Row="1"/>
                                    <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                                  ToolTip="If enabled, the code generator will generate a Module class for the Autofac DI framework where all agents are registered."
                                                  IsChecked="{Binding GenerateAutofacModule, Mode=TwoWay}"
                                                  HorizontalAlignment="Left"
                                                  Grid.Column="1" Grid.Row="1"/>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type viewModel:FolderViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="Name" Margin="0,4,8,4" VerticalAlignment="Center"
                                               Grid.Column="0" Grid.Row="0"/>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="{Binding Name}" TextTrimming="CharacterEllipsis"
                                               ToolTip="{Binding Name}"
                                               Grid.Column="1" Grid.Row="0"/>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="Is Relative Root" Margin="0,4,8,4" VerticalAlignment="Center"
                                               ToolTip="Shows whether this is the relative root folder of the package. Meaning that all elements with relative namespaces are found below this folder."
                                               Grid.Column="0" Grid.Row="1"/>
                                    <wpfView:LockableToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                                               ToolTip="Shows whether this is the relative root folder of the package. Meaning that all elements with relative namespaces are found below this folder."
                                                               IsChecked="{Binding IsRelativeRoot}"
                                                               HorizontalAlignment="Left"
                                                               LockToggle="True"
                                                               Grid.Column="1" Grid.Row="1"/>
                                </Grid>
                            </DataTemplate>

                            <DataTemplate DataType="{x:Type viewModel:MessageViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.Resources>
                                        <ObjectDataProvider x:Key="MessageTypeEnum" MethodName="GetValues"
                                                            ObjectType="{x:Type System:Enum}">
                                            <ObjectDataProvider.MethodParameters>
                                                <x:Type TypeName="viewModel:MessageType"/>
                                            </ObjectDataProvider.MethodParameters>
                                        </ObjectDataProvider>
                                    </Grid.Resources>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="Type" Margin="0,4,8,4" VerticalAlignment="Center"
                                               Grid.Column="0" Grid.Row="0"/>
                                    <ComboBox Style="{DynamicResource MaterialDesignComboBox}"
                                              ItemsSource="{Binding Source={StaticResource MessageTypeEnum}}"
                                              SelectedItem="{Binding MessageType, Mode=TwoWay}"
                                              Grid.Column="1" Grid.Row="0"/>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="Name" Margin="0,4,8,4" VerticalAlignment="Center"
                                               Grid.Column="0" Grid.Row="1"/>
                                    <TextBox Style="{DynamicResource UpdateOnEnterBox}"
                                             Text="{Binding Name, Mode=TwoWay}"
                                             Grid.Column="1" Grid.Row="1"/>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="Namespace" Margin="0,4,8,4" VerticalAlignment="Center"
                                               Grid.Column="0" Grid.Row="2"/>
                                    <TextBox Style="{DynamicResource UpdateOnEnterBox}"
                                             Text="{Binding RelativeNamespace, Mode=TwoWay}"
                                             Grid.Column="1" Grid.Row="2"/>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               x:Name="DecoratorTextBlock" Visibility="Collapsed"
                                               Text="Decorated Message" Margin="0,4,8,4" VerticalAlignment="Center"
                                               Grid.Column="0" Grid.Row="3"/>
                                    <ComboBox Style="{DynamicResource MaterialDesignComboBox}"
                                              x:Name="DecoratorComboBox" Visibility="Collapsed"
                                              Grid.Column="1" Grid.Row="3"
                                              ItemsSource="{Binding AvailableItems.AvailableMessages}"
                                              SelectedItem="{Binding DecoratedMessage, Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type viewModel:MessageViewModel}">
                                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                                           Text="{Binding Name}" ToolTip="{Binding FullName}"
                                                           TextTrimming="CharacterEllipsis" Grid.Column="0"
                                                           VerticalAlignment="Center"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </Grid>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding MessageType}" Value="MessageDecorator">
                                        <Setter TargetName="DecoratorTextBlock" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="DecoratorComboBox" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                            
                            <DataTemplate DataType="{x:Type viewModel:AgentViewModel}">
                                <Grid>
                                    <Grid.Resources>
                                        <DataTemplate DataType="{x:Type viewModel:MessageViewModel}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                                           Text="{Binding Name}" ToolTip="{Binding FullName}"
                                                           TextTrimming="CharacterEllipsis" Grid.Column="0"
                                                           VerticalAlignment="Center"/>
                                    
                                                <Button Style="{StaticResource DeleteItemButton}" Grid.Column="1">
                                                    <materialDesign:PackIcon Kind="Delete"/>
                                                </Button>
                                            </Grid>
                                        </DataTemplate>
                                        
                                        <ObjectDataProvider x:Key="AgentTypeEnum" MethodName="GetValues"
                                                            ObjectType="{x:Type System:Enum}">
                                            <ObjectDataProvider.MethodParameters>
                                                <x:Type TypeName="viewModel:AgentType"/>
                                            </ObjectDataProvider.MethodParameters>
                                        </ObjectDataProvider>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="Type" Margin="0,4,8,4" VerticalAlignment="Center"
                                               Grid.Column="0" Grid.Row="0"/>
                                    <ComboBox Style="{DynamicResource MaterialDesignComboBox}"
                                              ItemsSource="{Binding Source={StaticResource AgentTypeEnum}}"
                                              SelectedItem="{Binding AgentType, Mode=TwoWay}"
                                              Grid.Column="1" Grid.Row="0"/>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="Name" Margin="0,4,8,4" VerticalAlignment="Center"
                                               Grid.Column="0" Grid.Row="1"/>
                                    <TextBox Style="{DynamicResource UpdateOnEnterBox}"
                                             Text="{Binding Name, Mode=TwoWay}"
                                             Grid.Column="1" Grid.Row="1"/>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="Namespace" Margin="0,4,8,4" VerticalAlignment="Center"
                                               Grid.Column="0" Grid.Row="2"/>
                                    <TextBox Style="{DynamicResource UpdateOnEnterBox}"
                                             Text="{Binding RelativeNamespace, Mode=TwoWay}"
                                             Grid.Column="1" Grid.Row="2"/>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               x:Name="InterceptorTextBlock" Visibility="Collapsed"
                                               Text="Intercepting Messages" Margin="0,4,8,4" VerticalAlignment="Top"
                                               Grid.Column="0" Grid.Row="3" Grid.RowSpan="2"/>
                                    <ComboBox ItemsSource="{Binding AvailableItems.AvailableMessages}"
                                              x:Name="InterceptorComboBox" Visibility="Collapsed"
                                              Style="{StaticResource EditableMessageComboBox}"
                                              Text="{Binding NewInterceptingMessage, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                              SelectedItem="{Binding NewInterceptingMessageObject, Mode=OneWayToSource}"
                                              Grid.Column="1" Grid.Row="3"/>
                                    <ListBox ItemsSource="{Binding InterceptingMessages}"
                                             x:Name="InterceptorListBox" Visibility="Collapsed"
                                              Style="{StaticResource MessageListBox}"
                                              Grid.Column="1" Grid.Row="4"/>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="Consuming Messages" Margin="0,4,8,4" VerticalAlignment="Top"
                                               Grid.Column="0" Grid.Row="5" Grid.RowSpan="2"/>
                                    <ComboBox ItemsSource="{Binding AvailableItems.AvailableMessages}"
                                              Style="{StaticResource EditableMessageComboBox}"
                                              Text="{Binding NewConsumingMessage, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                              SelectedItem="{Binding NewConsumingMessageObject, Mode=OneWayToSource}"
                                              Grid.Column="1" Grid.Row="5"/>
                                    <ListBox ItemsSource="{Binding ConsumingMessages}"
                                              Style="{StaticResource MessageListBox}"
                                              Grid.Column="1" Grid.Row="6"/>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="Producing Messages" Margin="0,4,8,4" VerticalAlignment="Top"
                                               Grid.Column="0" Grid.Row="7" Grid.RowSpan="2"/>
                                    <ComboBox ItemsSource="{Binding AvailableItems.AvailableMessages}"
                                              Style="{StaticResource EditableMessageComboBox}"
                                              Text="{Binding NewProducingMessage, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                              SelectedItem="{Binding NewProducingMessageObject, Mode=OneWayToSource}"
                                              Grid.Column="1" Grid.Row="7"/>
                                    <ListBox ItemsSource="{Binding ProducingMessages}"
                                              Style="{StaticResource MessageListBox}"
                                              Grid.Column="1" Grid.Row="8"/>
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="Incoming Events" Margin="0,4,8,4" VerticalAlignment="Top"
                                               Grid.Column="0" Grid.Row="9" Grid.RowSpan="2"/>
                                    <TextBox Style="{DynamicResource UpdateOnEnterBox}"
                                              Text="{Binding NewIncomingEvent, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                              Grid.Column="1" Grid.Row="9"/>
                                    <ListBox ItemsSource="{Binding IncomingEvents}"
                                              Style="{StaticResource EventsListBox}"
                                              Grid.Column="1" Grid.Row="10" />
                                    <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                               Text="Produced Events" Margin="0,4,8,4" VerticalAlignment="Top"
                                               Grid.Column="0" Grid.Row="11" Grid.RowSpan="2"/>
                                    <TextBox Style="{DynamicResource UpdateOnEnterBox}"
                                             Text="{Binding NewProducedEvent, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                             Grid.Column="1" Grid.Row="11"/>
                                    <ListBox ItemsSource="{Binding ProducedEvents}"
                                              Style="{StaticResource EventsListBox}" 
                                              Grid.Column="1" Grid.Row="12"/>
                                </Grid>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding AgentType}" Value="Interceptor">
                                        <Setter TargetName="InterceptorTextBlock" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="InterceptorComboBox" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="InterceptorListBox" Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ScrollViewer.Resources>
                    </ScrollViewer>
                </materialDesign:Card>
                <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" ResizeDirection="Columns"
                              ResizeBehavior="PreviousAndNext"
                              VerticalAlignment="Stretch"
                              Width="2"
                              Height="Auto"/>
                <materialDesign:Card Padding="32" Margin="10,16,16,16" Grid.Column="2" Grid.Row="0" Grid.RowSpan="3">
                    <DockPanel x:Name="GraphViewerPanel" ClipToBounds="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                </materialDesign:Card>
            </Grid>
        </DockPanel>
    </materialDesign:DialogHost>
</Window>
