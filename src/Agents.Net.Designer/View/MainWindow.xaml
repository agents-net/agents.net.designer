<Window x:Class="Agents.Net.Designer.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:wpfGraphControl="http://mlsagl"

        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModel="clr-namespace:Agents.Net.Designer.ViewModel"
        xmlns:view="clr-namespace:Agents.Net.Designer.View"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
          Title="MainWindow" Height="700" Width="800">

    <DockPanel>
        <Menu IsMainMenu="True" DockPanel.Dock="Top">
            <MenuItem
                Header="_File">
                <MenuItem
                    Header="Connect to File"
                    Click="ConnectFileOnClick"
                    InputGestureText="Crtl+O">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon
                            Kind="Database" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Header="Export image"
                    Click="ExportImageOnClick"
                    InputGestureText="Crtl+E">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon
                            Kind="Image" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem
                    Header="Generate classes"
                    Click="GenerateClassesOnClick"
                    InputGestureText="Crtl+G">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon
                            Kind="Code" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem
                Header="_Edit">
                <MenuItem
                    Header="Add Agent"
                    Click="AddAgentOnClick"
                    InputGestureText="Crtl+Alt+A">
                </MenuItem>
                <MenuItem
                    Header="Add Message"
                    Click="AddMessageOnClick"
                    InputGestureText="Crtl+Alt+M">
                </MenuItem>
                <MenuItem
                    Header="Add Generator Settings"
                    Click="AddGeneratorSettingsOnClick">
                </MenuItem>
            </MenuItem>
        </Menu>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="2"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <materialDesign:Card Padding="32" Margin="16,16,10,10" Grid.Column="0" Grid.Row="0">
                <materialDesign:Card.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type viewModel:CommunityViewModel}"
                                              ItemsSource="{Binding Items}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="DesktopWindows" VerticalAlignment="Center"/>
                            <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                       Text="{Binding Name}" Margin="8,0,0,0" 
                                       VerticalAlignment="Center"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    
                    <HierarchicalDataTemplate DataType="{x:Type viewModel:FolderViewModel}"
                                              ItemsSource="{Binding Items}">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon Kind="Folder" VerticalAlignment="Center"/>
                            <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                       Text="{Binding Name}" Margin="8,0,0,0" VerticalAlignment="Center"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    
                    <HierarchicalDataTemplate DataType="{x:Type viewModel:AgentViewModel}"
                                              ItemsSource="{Binding Items}">
                        <StackPanel Orientation="Horizontal" ToolTip="{Binding FullName}">
                            <materialDesign:PackIcon Kind="FaceAgent" VerticalAlignment="Center"/>
                            <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                       Text="{Binding Name}" Margin="8,0,0,0" VerticalAlignment="Center"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    
                    <HierarchicalDataTemplate DataType="{x:Type viewModel:MessageViewModel}"
                                              ItemsSource="{Binding Items}">
                        <StackPanel Orientation="Horizontal" ToolTip="{Binding FullName}">
                            <materialDesign:PackIcon Kind="Message" VerticalAlignment="Center"/>
                            <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                       Text="{Binding Name}" Margin="8,0,0,0" VerticalAlignment="Center"/>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </materialDesign:Card.Resources>
                <TreeView ItemsSource="{Binding Items}"
                          d:DataContext="{d:DesignInstance viewModel:TreeViewModel, IsDesignTimeCreatable=True}"
                          VirtualizingStackPanel.IsVirtualizing="True"
                          VirtualizingStackPanel.VirtualizationMode="Recycling"
                          x:Name="TreeView"
                          SelectedItemChanged="TreeViewOnSelectedItemChanged">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsExpanded" Value="True"/>
                            <Setter Property="view:AttachedBehaviors.IsBringSelectedIntoView" Value="True"/>
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </materialDesign:Card>
            <GridSplitter Grid.Column="0" Grid.Row="1" ResizeDirection="Rows"
                          ResizeBehavior="PreviousAndNext"
                          HorizontalAlignment="Stretch"
                          Height="2"
                          Width="Auto"/>
            <materialDesign:Card Padding="32" Margin="16,10,10,16" Grid.Column="0" Grid.Row="2">
                <ScrollViewer x:Name="DetailsView"
                                d:DataContext="{d:DesignInstance viewModel:DetailsViewModel, IsDesignTimeCreatable=True}"
                                Content="{Binding CurrentItem}"
                                VerticalScrollBarVisibility="Auto"
                                HorizontalScrollBarVisibility="Disabled">
                    <ScrollViewer.Resources>

                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignIconForegroundButton}" x:Key="DeleteItemButton">
                            <Setter Property="Width" Value="30"/>
                            <Setter Property="Height" Value="30"/>
                            <Setter Property="ToolTip" Value="Delete"/>
                            <Setter Property="Command" Value="{Binding Path=DataContext.DeleteItemCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Converter={view:ButtonToDeleteItemEventArgsConverter}}"/>
                        </Style>
                        
                        <Style TargetType="ListBox" BasedOn="{StaticResource MaterialDesignListBox}" x:Key="MessageListBox">
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                        
                        <Style TargetType="ListBox" BasedOn="{StaticResource MaterialDesignListBox}" x:Key="EventsListBox">
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="ItemTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis"
                                                       ToolTip="{Binding}" Grid.Column="0"
                                                       VerticalAlignment="Center"/>
                                
                                            <Button Style="{StaticResource DeleteItemButton}" Grid.Column="1">
                                                <materialDesign:PackIcon Kind="Delete"/>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        
                        <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}" x:Key="EditableComboBox">
                            <Setter Property="IsEditable" Value="True"/>
                            <Setter Property="IsTextSearchEnabled" Value="True"/>
                            <Setter Property="IsTextSearchCaseSensitive" Value="True"/>
                            <Setter Property="TextSearch.TextPath" Value="Name"/>
                            <Setter Property="view:AttachedBehaviors.UpdatePropertySourceWhenEnterPressed" Value="ComboBox.Text"/>
                        </Style>
                        
                        <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}" x:Key="UpdateOnEnterBox">
                            <Setter Property="VerticalAlignment" Value="Center"/>
                            <Setter Property="view:AttachedBehaviors.UpdatePropertySourceWhenEnterPressed" Value="TextBox.Text"/>
                        </Style>

                        <DataTemplate DataType="{x:Type viewModel:CommunityViewModel}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="Default Namespace" Margin="0,4,8,4" VerticalAlignment="Center"
                                           Grid.Column="0" Grid.Row="0"/>
                                <TextBox Style="{DynamicResource UpdateOnEnterBox}"
                                         Text="{Binding Name, Mode=TwoWay}"
                                         ToolTip="{Binding Name}"
                                         Grid.Column="1" Grid.Row="0"/>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="Generate Autofac Module" Margin="0,4,8,4" VerticalAlignment="Center"
                                           ToolTip="If enabled, the code generator will generate a Module class for the Autofac DI framework where all agents are registered."
                                           Grid.Column="0" Grid.Row="1"/>
                                <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                              ToolTip="If enabled, the code generator will generate a Module class for the Autofac DI framework where all agents are registered."
                                              IsChecked="{Binding GenerateAutofacModule, Mode=TwoWay}"
                                              HorizontalAlignment="Left"
                                              Grid.Column="1" Grid.Row="1"/>
                            </Grid>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type viewModel:FolderViewModel}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="Name" Margin="0,4,8,4" VerticalAlignment="Center"
                                           Grid.Column="0" Grid.Row="0"/>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="{Binding Name}" TextTrimming="CharacterEllipsis"
                                           ToolTip="{Binding Name}"
                                           Grid.Column="1" Grid.Row="0"/>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="Is Relative Root" Margin="0,4,8,4" VerticalAlignment="Center"
                                           ToolTip="Shows whether this is the relative root folder of the package. Meaning that all elements with relative namespaces are found below this folder."
                                           Grid.Column="0" Grid.Row="1"/>
                                <view:LockableToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                                           ToolTip="Shows whether this is the relative root folder of the package. Meaning that all elements with relative namespaces are found below this folder."
                                                           IsChecked="{Binding IsRelativeRoot}"
                                                           HorizontalAlignment="Left"
                                                           LockToggle="True"
                                                           Grid.Column="1" Grid.Row="1"/>
                            </Grid>
                        </DataTemplate>

                        <DataTemplate DataType="{x:Type viewModel:MessageViewModel}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="Name" Margin="0,4,8,4" VerticalAlignment="Center"
                                           Grid.Column="0" Grid.Row="0"/>
                                <TextBox Style="{DynamicResource UpdateOnEnterBox}"
                                         Text="{Binding Name, Mode=TwoWay}"
                                         Grid.Column="1" Grid.Row="0"/>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="Namespace" Margin="0,4,8,4" VerticalAlignment="Center"
                                           Grid.Column="0" Grid.Row="1"/>
                                <TextBox Style="{DynamicResource UpdateOnEnterBox}"
                                         Text="{Binding RelativeNamespace, Mode=TwoWay}"
                                         Grid.Column="1" Grid.Row="1"/>
                            </Grid>
                        </DataTemplate>
                        
                        <DataTemplate DataType="{x:Type viewModel:AgentViewModel}">
                            <Grid>
                                <Grid.Resources>
                                    <DataTemplate DataType="{x:Type viewModel:MessageViewModel}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                                       Text="{Binding Name}" ToolTip="{Binding FullName}"
                                                       TextTrimming="CharacterEllipsis" Grid.Column="0"
                                                       VerticalAlignment="Center"/>
                                
                                            <Button Style="{StaticResource DeleteItemButton}" Grid.Column="1">
                                                <materialDesign:PackIcon Kind="Delete"/>
                                            </Button>
                                        </Grid>
                                    </DataTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="Name" Margin="0,4,8,4" VerticalAlignment="Center"
                                           Grid.Column="0" Grid.Row="0"/>
                                <TextBox Style="{DynamicResource UpdateOnEnterBox}"
                                         Text="{Binding Name, Mode=TwoWay}"
                                         Grid.Column="1" Grid.Row="0"/>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="Namespace" Margin="0,4,8,4" VerticalAlignment="Center"
                                           Grid.Column="0" Grid.Row="1"/>
                                <TextBox Style="{DynamicResource UpdateOnEnterBox}"
                                         Text="{Binding RelativeNamespace, Mode=TwoWay}"
                                         Grid.Column="1" Grid.Row="1"/>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="Consuming Messages" Margin="0,4,8,4" VerticalAlignment="Top"
                                           Grid.Column="0" Grid.Row="2" Grid.RowSpan="2"/>
                                <ComboBox ItemsSource="{Binding AvailableItems.AvailableMessages}"
                                          Style="{StaticResource EditableComboBox}"
                                          Text="{Binding NewConsumingMessage, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                          SelectedItem="{Binding NewConsumingMessageObject, Mode=OneWayToSource}"
                                          Grid.Column="1" Grid.Row="2"/>
                                <ListBox ItemsSource="{Binding ConsumingMessages}"
                                          Style="{StaticResource MessageListBox}"
                                          Grid.Column="1" Grid.Row="3"/>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="Producing Messages" Margin="0,4,8,4" VerticalAlignment="Top"
                                           Grid.Column="0" Grid.Row="4" Grid.RowSpan="2"/>
                                <ComboBox ItemsSource="{Binding AvailableItems.AvailableMessages}"
                                          Style="{StaticResource EditableComboBox}"
                                          Text="{Binding NewProducingMessage, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                          SelectedItem="{Binding NewProducingMessageObject, Mode=OneWayToSource}"
                                          Grid.Column="1" Grid.Row="4"/>
                                <ListBox ItemsSource="{Binding ProducingMessages}"
                                          Style="{StaticResource MessageListBox}"
                                          Grid.Column="1" Grid.Row="5"/>
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="Incoming Events" Margin="0,4,8,4" VerticalAlignment="Top"
                                           Grid.Column="0" Grid.Row="6" Grid.RowSpan="2"/>
                                <TextBox Style="{DynamicResource UpdateOnEnterBox}"
                                          Text="{Binding NewIncomingEvent, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                          Grid.Column="1" Grid.Row="6"/>
                                <ListBox ItemsSource="{Binding IncomingEvents}"
                                          Style="{StaticResource EventsListBox}"
                                          Grid.Column="1" Grid.Row="7" />
                                <TextBlock Style="{DynamicResource MaterialDesignTextBlock}"
                                           Text="Produced Events" Margin="0,4,8,4" VerticalAlignment="Top"
                                           Grid.Column="0" Grid.Row="8" Grid.RowSpan="2"/>
                                <TextBox Style="{DynamicResource UpdateOnEnterBox}"
                                         Text="{Binding NewProducedEvent, Mode=TwoWay, UpdateSourceTrigger=Explicit}"
                                         Grid.Column="1" Grid.Row="8"/>
                                <ListBox ItemsSource="{Binding ProducedEvents}"
                                          Style="{StaticResource EventsListBox}" 
                                          Grid.Column="1" Grid.Row="9"/>
                            </Grid>
                        </DataTemplate>
                    </ScrollViewer.Resources>
                </ScrollViewer>
            </materialDesign:Card>
            <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" ResizeDirection="Columns"
                          ResizeBehavior="PreviousAndNext"
                          VerticalAlignment="Stretch"
                          Width="2"
                          Height="Auto"/>
            <materialDesign:Card Padding="32" Margin="10,16,16,16" Grid.Column="2" Grid.Row="0" Grid.RowSpan="3">
                <DockPanel x:Name="GraphViewerPanel" ClipToBounds="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            </materialDesign:Card>
        </Grid>
    </DockPanel>
</Window>
